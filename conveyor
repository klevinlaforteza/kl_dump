import maya.cmds as mc

'''
Conveyor belt rig using follicles
'''
    
def create_follicle(object, uPos=0.5, vPos=0.5):
    
    shape = mc.listRelatives(object, shapes=True)[0]
    objType = mc.objectType(shape)
    
    follicle = mc.createNode("follicle")
    follicleTransform = mc.listRelatives(follicle, parent=True)[0]
    
    if objType == "nurbsSurface":
        mc.connectAttr("%s.local" % object, "%s.inputSurface" % follicle)
    elif objType == "mesh":
        mc.connectAttr("%s.outMesh" % object, "%s.inputMesh" % follicle)
        
    mc.connectAttr('%s.worldMatrix[0]' % object, '%s.inputWorldMatrix' % follicleTransform)
    mc.connectAttr('%s.outRotate' % follicle, '%s.rotate' % follicleTransform)
    mc.connectAttr('%s.outTranslate' % follicle, '%s.translate' % follicleTransform)
    mc.setAttr('%s.parameterU' % follicle, uPos)
    mc.setAttr('%s.parameterV' % follicle, vPos)
    
    return follicle, follicleTransform

    
def conveyor_rig():
    selection = mc.ls(selection=True)[0]
    follicleGrp = mc.createNode("transform", n="%s_fol_grp" % selection)
    spans = mc.getAttr(mc.listRelatives(selection, shapes=True)[0] + ".spansU")
    distance = 1.00/spans
    start = distance/2
    num = 1
    
    # Create controller
    ctrl = mc.duplicateCurve("%s.v[0]" % selection, constructionHistory=False, name="%s_ctrl" % selection)[0]
    mc.scale(1.2, 1.2, 1.2, "%s.cv[0:]" % ctrl, ocp=True)
    mc.addAttr(ctrl, longName="Cycle", attributeType="float", keyable=True)
    driver = "%s.Cycle" % ctrl
    
    # Create a unit conversion node
    ucn = mc.createNode("unitConversion", name="%s_ucn" % selection)
    mc.setAttr("%s.conversionFactor" % ucn, 0.01)
    mc.connectAttr(driver, "%s.input" % ucn)
    
    for span in range(0, spans):
        foll = create_follicle(selection, start, 0.5)
        start += distance
        follicleTransform = mc.rename(foll[1], "%s_%s_fol" % (selection, num))
        num += 1
        mc.parent(follicleTransform, follicleGrp)
        mc.select(follicleTransform)
        joint = mc.joint(name=follicleTransform.replace("fol", "skn"))
        
        follicle = mc.listRelatives(follicleTransform, shapes=True)[0]
        attr = follicle + ".parameterU"
        startU = mc.getAttr(attr)
        
        mc.setAttr(attr, 0)
        mc.setDrivenKeyframe(attr, cd=driver, itt="linear", ott="linear")
        mc.setAttr(driver, 1)
        mc.setAttr(attr, 1)
        mc.setDrivenKeyframe(attr, cd=driver, itt="linear", ott="linear")
        mc.setAttr(driver, 0)
        
        mc.setAttr(follicle + "_parameterU.preInfinity", 3)
        mc.setAttr(follicle + "_parameterU.postInfinity", 3)
        mc.keyframe(follicle + "_parameterU", index=(0, 0), e=1, fc=0 - startU, o="over", a=1)
        mc.keyframe(follicle + "_parameterU", index=(1, 1), e=1, fc=1 - startU, o="over", a=1)
        mc.connectAttr("%s.output" % ucn, follicle + "_parameterU.input", force=True)

